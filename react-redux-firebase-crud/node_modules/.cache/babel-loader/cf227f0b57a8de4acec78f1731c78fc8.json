{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camo\\\\Desktop\\\\Proyectos\\\\react-redux-firebase-crud\\\\src\\\\pages\\\\ShowUsers\\\\ShowUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport showUsers from \"../../redux/actions/showUsers\";\nimport firebase from \"../../database/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowUsers = props => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  firebase.db.collection(\"users\").onSnapshot(querySnapshot => {\n    const users = [];\n    querySnapshot.docs.forEach(doc => {\n      const {\n        name,\n        email,\n        password\n      } = doc.data();\n      users.push({\n        id: doc.id,\n        name,\n        email,\n        password\n      });\n    });\n    setUsers(users);\n  });\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hola\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowUsers, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n\n_c = ShowUsers;\n\nconst mapStateToProps = state => {\n  return {\n    usersShow: state.usersShow\n  };\n};\n\nconst mapDispatchToProps = {\n  showUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUsers);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowUsers\");","map":{"version":3,"sources":["C:/Users/Camo/Desktop/Proyectos/react-redux-firebase-crud/src/pages/ShowUsers/ShowUsers.js"],"names":["useState","useEffect","connect","showUsers","firebase","ShowUsers","props","users","setUsers","db","collection","onSnapshot","querySnapshot","docs","forEach","doc","name","email","password","data","push","id","console","log","mapStateToProps","state","usersShow","mapDispatchToProps"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAGEI,EAAAA,QAAQ,CAACK,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,UAAhC,CAA4CC,aAAD,IAAmB;AAC5D,UAAML,KAAK,GAAG,EAAd;AAEAK,IAAAA,aAAa,CAACC,IAAd,CAAmBC,OAAnB,CAA4BC,GAAD,IAAS;AAClC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAA4BH,GAAG,CAACI,IAAJ,EAAlC;AACAZ,MAAAA,KAAK,CAACa,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEN,GAAG,CAACM,EADC;AAETL,QAAAA,IAFS;AAGTC,QAAAA,KAHS;AAITC,QAAAA;AAJS,OAAX;AAMD,KARD;AASAV,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAbD;AAeFe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMF,S;;KAAAA,S;;AA2BN,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADZ,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBxB,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,SAA7C,CAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport showUsers from \"../../redux/actions/showUsers\";\r\nimport firebase from \"../../database/firebase\";\r\n\r\nconst ShowUsers = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n\r\n    firebase.db.collection(\"users\").onSnapshot((querySnapshot) => {\r\n      const users = [];\r\n\r\n      querySnapshot.docs.forEach((doc) => {\r\n        const { name, email, password } = doc.data();\r\n        users.push({\r\n          id: doc.id,\r\n          name,\r\n          email,\r\n          password,\r\n        });\r\n      });\r\n      setUsers(users);\r\n    });\r\n\r\n  console.log(users);\r\n  return (\r\n    <div>\r\n      <h2>hola</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersShow: state.usersShow,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  showUsers,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUsers);\r\n"]},"metadata":{},"sourceType":"module"}