{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camo\\\\Desktop\\\\Proyectos\\\\react-redux-firebase-crud\\\\src\\\\pages\\\\CreateUser\\\\CreateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/Button/Button\";\nimport Dialog from \"../../components/Dialog/Dialog\";\nimport createUser from \"../../redux/actions/createUser\";\nimport firebase from \"../../database/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUser = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onChangePassword = text => {\n    setUser({ ...user,\n      password: text\n    });\n  };\n\n  const onChangeUsername = text => {\n    setUser({ ...user,\n      username: text\n    });\n  };\n\n  const onChangeSelection = user => {\n    createUser(user);\n  };\n\n  console.log(user);\n\n  const handleCloseDialog = () => {\n    setIsOpen(false);\n  };\n\n  const handleButtonClick = () => {\n    setIsOpen(true);\n  };\n\n  const newUser = () => {\n    firebase.db.collection(\"users\").add({\n      name: user.username,\n      password: user.password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleButtonClick,\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      title: \"CREATE USER\",\n      onClose: handleCloseDialog,\n      onChangeUsername: onChangeUsername,\n      onChangePassword: onChangePassword,\n      onChangeSelection: onChangeSelection,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: newUser,\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateUser, \"hpRN3gpThAtTB8tRPOphGQ2UX4c=\");\n\n_c = CreateUser;\n\nconst mapStateToProps = state => {\n  return {\n    userCreation: state.userCreation\n  };\n};\n\nconst mapDispatchToProps = {\n  createUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["C:/Users/Camo/Desktop/Proyectos/react-redux-firebase-crud/src/pages/CreateUser/CreateUser.js"],"names":["React","useState","connect","Button","Dialog","createUser","firebase","CreateUser","props","isOpen","setIsOpen","user","setUser","username","password","onChangePassword","text","onChangeUsername","onChangeSelection","console","log","handleCloseDialog","handleButtonClick","newUser","db","collection","add","name","mapStateToProps","state","userCreation","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAACY,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CAAhC;;AAGA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjCJ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,MAAAA,QAAQ,EAAEE;AAArB,KAAD,CAAP;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAID,IAAD,IAAU;AACjCJ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,MAAAA,QAAQ,EAAEG;AAArB,KAAD,CAAP;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAIP,IAAD,IAAU;AAChCN,IAAAA,UAAU,CAACM,IAAD,CAAV;AACH,GAFD;;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;;AACA,QAAMU,iBAAiB,GAAG,MAAM;AAC9BX,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMY,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,QAAMa,OAAO,GAAI,MAAM;AACpBjB,IAAAA,QAAQ,CAACkB,EAAT,CAAYC,UAAZ,CAAuB,OAAvB,EAAgCC,GAAhC,CAAoC;AACnCC,MAAAA,IAAI,EAAEhB,IAAI,CAACE,QADwB;AAEnCC,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AAFoB,KAApC;AAKF,GAND;;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEb,MADR;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAEY,iBAHX;AAIE,MAAA,gBAAgB,EAAEJ,gBAJpB;AAKE,MAAA,gBAAgB,EAAEF,gBALpB;AAME,MAAA,iBAAiB,EAAEG,iBANrB;AAAA,6BAOC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7CD;;GAAMhB,U;;KAAAA,U;;AAgDN,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADf,GAAP;AAGD,CAJD;;AAOA,MAAMC,kBAAkB,GAAG;AACzB1B,EAAAA;AADyB,CAA3B;AAIA,eAAeH,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CxB,UAA7C,CAAf;AAAwE","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Dialog from \"../../components/Dialog/Dialog\";\r\nimport createUser from \"../../redux/actions/createUser\"\r\nimport firebase from \"../../database/firebase\"\r\n\r\nconst CreateUser = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [user, setUser] = useState({username: \"\", password: \"\"})\r\n\r\n \r\n  const onChangePassword = (text) => {\r\n    setUser({ ...user, password: text });\r\n  }\r\n  const onChangeUsername = (text) => {\r\n    setUser({ ...user, username: text });\r\n  }\r\n  const onChangeSelection = (user) => {\r\n      createUser(user);\r\n  }\r\n  console.log(user)\r\n  const handleCloseDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const handleButtonClick = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const newUser =  () => {\r\n     firebase.db.collection(\"users\").add({\r\n      name: user.username,\r\n      password: user.password\r\n  })\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleButtonClick}>Create User</Button>\r\n      <Dialog\r\n        open={isOpen}\r\n        title=\"CREATE USER\"\r\n        onClose={handleCloseDialog}\r\n        onChangeUsername={onChangeUsername}\r\n        onChangePassword={onChangePassword}\r\n        onChangeSelection={onChangeSelection}  \r\n      ><Button onClick={newUser}>Create User</Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userCreation: state.userCreation\r\n  } \r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  createUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);;\r\n"]},"metadata":{},"sourceType":"module"}