{"ast":null,"code":"'use strict';\n\nconst auth = require('./auth.js');\n\nconst func = require('./functions.js');\n\nconst fetch = require('node-fetch'); //setting global variables to be used outside this module\n\n\nglobal.country = null;\nglobal.indicator = null;\nglobal.ticker = null;\nglobal.group = null; //This function builds the path to get the API request:\n\n/****************************************************************  \r\n   WITHOUT PARAMETERS A LIST OF ALL INDICATORS WILL BE PROVIDED\r\n   parameters:\r\n    String or list: country, indicator, ticker\r\n\r\n   example:\r\n    getIndicatorData();\r\n    getIndicatorData(country = ['china', 'portugal']);\r\n    getIndicatorData(indicator ='gdp');        \r\n    getIndicatorData(ticker ='usurtot');\r\n    getIndicatorData(country ='china', group = 'housing');             \r\n\r\n*******************************************************************/\n\nfunction getIndicatorData() {\n  var url = '';\n  var Data = '';\n\n  if (country != null) {\n    url = '/country/' + country;\n  }\n\n  if (indicator != null) {\n    url = '/country/all/' + indicator;\n  }\n\n  if (ticker != null) {\n    url = '/country/ticker/' + ticker;\n  }\n\n  if (country != null && group != null) {\n    url = '/country/' + country + '?c=' + apikey + '&group=' + group;\n  }\n\n  if (country === null && indicator === null && ticker === null) {\n    url = '/indicators';\n  }\n\n  if (url.includes(group)) {\n    Data = url_base + url.replace(' ', '%20');\n  } else {\n    Data = url_base + url + '?c=' + apikey.replace(' ', '%20');\n  }\n\n  return fetch(Data).then(func.handleErrors).then(function (response) {\n    return response.json(); // process it inside the `then` when calling the function       \n  }).catch(function (err) {\n    return err.message;\n  });\n}\n\nmodule.exports.getIndicatorData = getIndicatorData;","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/node_modules/tradingeconomics/indicators.js"],"names":["auth","require","func","fetch","global","country","indicator","ticker","group","getIndicatorData","url","Data","apikey","includes","url_base","replace","then","handleErrors","response","json","catch","err","message","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAD,CAArB,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,SAAP,GAAmB,IAAnB;AACAF,MAAM,CAACG,MAAP,GAAgB,IAAhB;AACAH,MAAM,CAACI,KAAP,GAAe,IAAf,C,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,gBAAT,GAA4B;AAExB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIN,OAAO,IAAI,IAAf,EAAoB;AAChBK,IAAAA,GAAG,GAAG,cAAaL,OAAnB;AACH;;AACD,MAAIC,SAAS,IAAI,IAAjB,EAAsB;AAClBI,IAAAA,GAAG,GAAG,kBAAkBJ,SAAxB;AACH;;AACD,MAAIC,MAAM,IAAI,IAAd,EAAmB;AACfG,IAAAA,GAAG,GAAG,qBAAqBH,MAA3B;AACH;;AACD,MAAIF,OAAO,IAAI,IAAX,IAAmBG,KAAK,IAAI,IAAhC,EAAqC;AACjCE,IAAAA,GAAG,GAAG,cAAcL,OAAd,GAAwB,KAAxB,GAAgCO,MAAhC,GAAyC,SAAzC,GAAqDJ,KAA3D;AACH;;AACD,MAAIH,OAAO,KAAK,IAAZ,IAAoBC,SAAS,KAAK,IAAlC,IAA0CC,MAAM,KAAK,IAAzD,EAA8D;AAC1DG,IAAAA,GAAG,GAAG,aAAN;AACH;;AAED,MAAIA,GAAG,CAACG,QAAJ,CAAaL,KAAb,CAAJ,EAAwB;AACpBG,IAAAA,IAAI,GAAGG,QAAQ,GAAGJ,GAAG,CAAEK,OAAL,CAAc,GAAd,EAAkB,KAAlB,CAAlB;AACH,GAFD,MAEK;AACDJ,IAAAA,IAAI,GAAGG,QAAQ,GAAGJ,GAAX,GAAiB,KAAjB,GAAyBE,MAAM,CAACG,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAAhC;AACH;;AAED,SAAOZ,KAAK,CAACQ,IAAD,CAAL,CACNK,IADM,CACDd,IAAI,CAACe,YADJ,EAEND,IAFM,CAED,UAASE,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAC3B,GAJM,EAIJC,KAJI,CAIE,UAAUC,GAAV,EAAe;AACpB,WAAOA,GAAG,CAACC,OAAX;AACH,GANM,CAAP;AAQH;;AAEDC,MAAM,CAACC,OAAP,CAAef,gBAAf,GAAkCA,gBAAlC","sourcesContent":["'use strict'\r\n\r\nconst auth = require('./auth.js');\r\nconst func = require('./functions.js');\r\nconst fetch = require('node-fetch');\r\n\r\n//setting global variables to be used outside this module\r\nglobal.country = null;\r\nglobal.indicator = null;\r\nglobal.ticker = null;\r\nglobal.group = null;\r\n\r\n\r\n//This function builds the path to get the API request:\r\n/****************************************************************  \r\n   WITHOUT PARAMETERS A LIST OF ALL INDICATORS WILL BE PROVIDED\r\n   parameters:\r\n    String or list: country, indicator, ticker\r\n\r\n   example:\r\n    getIndicatorData();\r\n    getIndicatorData(country = ['china', 'portugal']);\r\n    getIndicatorData(indicator ='gdp');        \r\n    getIndicatorData(ticker ='usurtot');\r\n    getIndicatorData(country ='china', group = 'housing');             \r\n\r\n*******************************************************************/\r\n\r\nfunction getIndicatorData() {\r\n    \r\n    var url = '';\r\n    var Data = '';\r\n \r\n    if (country != null){    \r\n        url = '/country/'+ country;    \r\n    }\r\n    if (indicator != null){      \r\n        url = '/country/all/' + indicator;    \r\n    }\r\n    if (ticker != null){     \r\n        url = '/country/ticker/' + ticker;    \r\n    }\r\n    if (country != null && group != null){    \r\n        url = '/country/' + country + '?c=' + apikey + '&group=' + group ;\r\n    }  \r\n    if (country === null && indicator === null && ticker === null){     \r\n        url = '/indicators';\r\n    }\r\n    \r\n    if (url.includes(group)){\r\n        Data = url_base + url .replace (' ','%20');\r\n    }else{\r\n        Data = url_base + url + '?c=' + apikey.replace (' ','%20');\r\n    }\r\n  \r\n    return fetch(Data)\r\n    .then(func.handleErrors)   \r\n    .then(function(response) {    \r\n        return response.json(); // process it inside the `then` when calling the function       \r\n    }).catch(function (err) {\r\n        return err.message;\r\n    });\r\n     \r\n}   \r\n\r\nmodule.exports.getIndicatorData = getIndicatorData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}