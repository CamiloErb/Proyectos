{"ast":null,"code":"'use strict';\n\nconst auth = require('./auth.js');\n\nconst date = require('./functions.js');\n\nconst func = require('./functions.js');\n\nconst fetch = require('node-fetch'); //setting global variables to be used outside this module\n\n\nglobal.country = null;\nglobal.indicator = null;\nglobal.ticker = null;\nglobal.id = null;\nglobal.start_date = null;\nglobal.end_date = null;\nglobal.utc = null; //This function builds the path to get the API request:\n\n/***************************************************************************************************************  \r\n     WITHOUT PARAMETERS A LIST OF ALL EVENTS WILL BE PROVIDED \r\n    parameters:\r\n        String or list: country, indicator, ticker, id \r\n        Date: start_date, end_date\r\n        UTC: choose utc time zone\r\n\r\n    example:\r\n        getCalendar();\r\n        getCalendar(utc='-60');\r\n        getCalendar(start_date = '2016-02-01', end_date = '2016-02-10');\r\n        getCalendar(start_date = '2016-02-01', end_date = '2016-02-10', utc='180');\r\n        getCalendar(country = ['china', 'portugal']);\r\n        getCalendar(country = ['china', 'portugal'], utc='120');\r\n        getCalendar(country ='china', start_date = '2016-02-01', end_date = '2016-02-10');\r\n        getCalendar(indicator = 'interest rate' ); \r\n        getCalendar(indicator ='inflation rate', start_date = '2016-02-01', end_date = '2016-02-10');       \r\n        getCalendar(ticker = ['SPAINFACORD', 'BAHRAININFNRATE']); \r\n        getCalendar(ticker =['SPAINFACORD', 'BAHRAININFNRATE'], start_date = '2018-01-01', end_date = '2018-03-01'); \r\n        getCalendar(id =['174108','160025','160030']);     \r\n\r\n****************************************************************************************************************/\n\nfunction getCalendar() {\n  var Data = '';\n  var url = '';\n\n  if (country != null) {\n    url = '/calendar/country/' + country;\n  }\n\n  if (country != null && start_date != null && end_date != null) {\n    url = '/calendar/country/' + country + '/' + start_date + '/' + end_date;\n  }\n\n  if (indicator != null) {\n    url = '/calendar/indicator/' + indicator;\n  }\n\n  if (indicator != null && start_date != null && end_date != null) {\n    url = '/calendar/indicator/' + indicator + '/' + start_date + '/' + end_date;\n  }\n\n  if (start_date != null && end_date != null && country === null && indicator === null && ticker === null && id === null) {\n    url = '/calendar/country/All/' + start_date + '/' + end_date;\n  }\n\n  if (country != null && indicator != null) {\n    url = '/calendar/country/' + country + '/indicator/' + indicator;\n  }\n\n  if (country != null && indicator != null && start_date != null && end_date != null) {\n    url = '/calendar/country/' + country + '/indicator/' + indicator + '/' + start_date + '/' + end_date;\n  }\n\n  if (ticker != null) {\n    url = '/calendar/ticker/' + ticker;\n  }\n\n  if (ticker != null && start_date != null && end_date != null) {\n    url = '/calendar/ticker/' + ticker + '/' + start_date + '/' + end_date;\n  }\n\n  if (id != null) {\n    url = '/calendar/calendarid/' + id;\n  }\n\n  if (country === null && indicator === null && start_date === null && end_date === null && ticker === null && id === null) {\n    url = '/calendar';\n  }\n\n  date.checkDates(start_date, end_date);\n\n  if (utc) {\n    Data = url_base + url + '?c=' + apikey.replace(' ', '%20') + '&UTC=' + utc;\n  } else {\n    Data = url_base + url + '?c=' + apikey.replace(' ', '%20');\n  }\n\n  console.log(Data);\n  return fetch(Data).then(func.handleErrors).then(function (response) {\n    return response.json(); // process it inside the `then` when calling the function\n  }).catch(function (err) {\n    return err.message;\n  });\n}\n\nmodule.exports.getCalendar = getCalendar;","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/node_modules/tradingeconomics/calendar.js"],"names":["auth","require","date","func","fetch","global","country","indicator","ticker","id","start_date","end_date","utc","getCalendar","Data","url","checkDates","url_base","apikey","replace","console","log","then","handleErrors","response","json","catch","err","message","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,YAAD,CAArB,C,CAEA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,SAAP,GAAmB,IAAnB;AACAF,MAAM,CAACG,MAAP,GAAgB,IAAhB;AACAH,MAAM,CAACI,EAAP,GAAY,IAAZ;AACAJ,MAAM,CAACK,UAAP,GAAoB,IAApB;AACAL,MAAM,CAACM,QAAP,GAAkB,IAAlB;AACAN,MAAM,CAACO,GAAP,GAAa,IAAb,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAsB;AAElB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,MAAIT,OAAO,IAAI,IAAf,EAAoB;AAChBS,IAAAA,GAAG,GAAG,uBAAuBT,OAA7B;AACH;;AACD,MAAIA,OAAO,IAAI,IAAX,IAAmBI,UAAU,IAAI,IAAjC,IAAyCC,QAAQ,IAAI,IAAzD,EAA8D;AAC1DI,IAAAA,GAAG,GAAG,uBAAuBT,OAAvB,GAAiC,GAAjC,GAAuCI,UAAvC,GAAoD,GAApD,GAA0DC,QAAhE;AACH;;AACD,MAAIJ,SAAS,IAAI,IAAjB,EAAsB;AAClBQ,IAAAA,GAAG,GAAG,yBAAyBR,SAA/B;AACH;;AACD,MAAIA,SAAS,IAAI,IAAb,IAAqBG,UAAU,IAAI,IAAnC,IAA2CC,QAAQ,IAAI,IAA3D,EAAgE;AAC5DI,IAAAA,GAAG,GAAG,yBAAyBR,SAAzB,GAAqC,GAArC,GAA2CG,UAA3C,GAAwD,GAAxD,GAA8DC,QAApE;AACH;;AACD,MAAID,UAAU,IAAI,IAAd,IAAsBC,QAAQ,IAAI,IAAlC,IAA0CL,OAAO,KAAK,IAAtD,IAA8DC,SAAS,KAAK,IAA5E,IAAoFC,MAAM,KAAK,IAA/F,IAAuGC,EAAE,KAAK,IAAlH,EAAuH;AACnHM,IAAAA,GAAG,GAAG,2BAA2BL,UAA3B,GAAwC,GAAxC,GAA8CC,QAApD;AACH;;AACD,MAAIL,OAAO,IAAG,IAAV,IAAkBC,SAAS,IAAI,IAAnC,EAAwC;AACpCQ,IAAAA,GAAG,GAAG,uBAAuBT,OAAvB,GAAiC,aAAjC,GAAiDC,SAAvD;AACH;;AACD,MAAID,OAAO,IAAI,IAAX,IAAmBC,SAAS,IAAI,IAAhC,IAAwCG,UAAU,IAAI,IAAtD,IAA8DC,QAAQ,IAAI,IAA9E,EAAmF;AAC/EI,IAAAA,GAAG,GAAG,uBAAuBT,OAAvB,GAAiC,aAAjC,GAAiDC,SAAjD,GAA6D,GAA7D,GAAmEG,UAAnE,GAAgF,GAAhF,GAAsFC,QAA5F;AACH;;AACD,MAAIH,MAAM,IAAI,IAAd,EAAmB;AACfO,IAAAA,GAAG,GAAG,sBAAsBP,MAA5B;AACH;;AACD,MAAIA,MAAM,IAAI,IAAV,IAAkBE,UAAU,IAAI,IAAhC,IAAwCC,QAAQ,IAAI,IAAxD,EAA6D;AACzDI,IAAAA,GAAG,GAAG,sBAAsBP,MAAtB,GAA+B,GAA/B,GAAqCE,UAArC,GAAkD,GAAlD,GAAwDC,QAA9D;AACH;;AACD,MAAGF,EAAE,IAAI,IAAT,EAAc;AACVM,IAAAA,GAAG,GAAG,0BAA0BN,EAAhC;AACH;;AACD,MAAGH,OAAO,KAAK,IAAZ,IAAoBC,SAAS,KAAK,IAAlC,IAA0CG,UAAU,KAAK,IAAzD,IAAiEC,QAAQ,KAAK,IAA9E,IAAsFH,MAAM,KAAK,IAAjG,IAAyGC,EAAE,KAAK,IAAnH,EAAwH;AACpHM,IAAAA,GAAG,GAAG,WAAN;AACH;;AAEDb,EAAAA,IAAI,CAACc,UAAL,CAAgBN,UAAhB,EAA4BC,QAA5B;;AACA,MAAGC,GAAH,EAAO;AACHE,IAAAA,IAAI,GAAGG,QAAQ,GAAGF,GAAX,GAAiB,KAAjB,GAAyBG,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAAzB,GAAsD,OAAtD,GAAgEP,GAAvE;AACH,GAFD,MAEK;AACDE,IAAAA,IAAI,GAAGG,QAAQ,GAAGF,GAAX,GAAiB,KAAjB,GAAyBG,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAAhC;AACH;;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEC,SAAOV,KAAK,CAACU,IAAD,CAAL,CACNQ,IADM,CACDnB,IAAI,CAACoB,YADJ,EAEND,IAFM,CAED,UAASE,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAE3B,GALM,EAKJC,KALI,CAKE,UAAUC,GAAV,EAAe;AACpB,WAAOA,GAAG,CAACC,OAAX;AACH,GAPM,CAAP;AASH;;AAEDC,MAAM,CAACC,OAAP,CAAejB,WAAf,GAA6BA,WAA7B","sourcesContent":["'use strict'\r\n\r\nconst auth = require('./auth.js');\r\nconst date = require('./functions.js');\r\nconst func = require('./functions.js');\r\nconst fetch = require('node-fetch');\r\n\r\n//setting global variables to be used outside this module\r\nglobal.country = null;\r\nglobal.indicator = null;\r\nglobal.ticker = null;\r\nglobal.id = null;\r\nglobal.start_date = null;\r\nglobal.end_date = null;\r\nglobal.utc = null;\r\n\r\n//This function builds the path to get the API request:\r\n/***************************************************************************************************************  \r\n     WITHOUT PARAMETERS A LIST OF ALL EVENTS WILL BE PROVIDED \r\n    parameters:\r\n        String or list: country, indicator, ticker, id \r\n        Date: start_date, end_date\r\n        UTC: choose utc time zone\r\n\r\n    example:\r\n        getCalendar();\r\n        getCalendar(utc='-60');\r\n        getCalendar(start_date = '2016-02-01', end_date = '2016-02-10');\r\n        getCalendar(start_date = '2016-02-01', end_date = '2016-02-10', utc='180');\r\n        getCalendar(country = ['china', 'portugal']);\r\n        getCalendar(country = ['china', 'portugal'], utc='120');\r\n        getCalendar(country ='china', start_date = '2016-02-01', end_date = '2016-02-10');\r\n        getCalendar(indicator = 'interest rate' ); \r\n        getCalendar(indicator ='inflation rate', start_date = '2016-02-01', end_date = '2016-02-10');       \r\n        getCalendar(ticker = ['SPAINFACORD', 'BAHRAININFNRATE']); \r\n        getCalendar(ticker =['SPAINFACORD', 'BAHRAININFNRATE'], start_date = '2018-01-01', end_date = '2018-03-01'); \r\n        getCalendar(id =['174108','160025','160030']);     \r\n\r\n****************************************************************************************************************/\r\n\r\nfunction getCalendar(){\r\n\r\n    var Data = '';\r\n    var url = '';\r\n\r\n    if (country != null){    \r\n        url = '/calendar/country/' + country;    \r\n    }\r\n    if (country != null && start_date != null && end_date != null){    \r\n        url = '/calendar/country/' + country + '/' + start_date + '/' + end_date;    \r\n    }\r\n    if (indicator != null){      \r\n        url = '/calendar/indicator/' + indicator;    \r\n    }\r\n    if (indicator != null && start_date != null && end_date != null){      \r\n        url = '/calendar/indicator/' + indicator + '/' + start_date + '/' + end_date;    \r\n    }\r\n    if (start_date != null && end_date != null && country === null && indicator === null && ticker === null && id === null){      \r\n        url = '/calendar/country/All/' + start_date + '/' + end_date;    \r\n    }\r\n    if (country!= null && indicator != null){    \r\n        url = '/calendar/country/' + country + '/indicator/' + indicator;    \r\n    }\r\n    if (country != null && indicator != null && start_date != null && end_date != null){    \r\n        url = '/calendar/country/' + country + '/indicator/' + indicator + '/' + start_date + '/' + end_date;    \r\n    }\r\n    if (ticker != null){     \r\n        url = '/calendar/ticker/' + ticker;    \r\n    }\r\n    if (ticker != null && start_date != null && end_date != null){     \r\n        url = '/calendar/ticker/' + ticker + '/' + start_date + '/' + end_date;    \r\n    }\r\n    if(id != null){\r\n        url = '/calendar/calendarid/' + id;\r\n    }  \r\n    if(country === null && indicator === null && start_date === null && end_date === null && ticker === null && id === null){\r\n        url = '/calendar';\r\n    }\r\n  \r\n    date.checkDates(start_date, end_date); \r\n    if(utc){\r\n        Data = url_base + url + '?c=' + apikey.replace (' ','%20') + '&UTC=' + utc;\r\n    }else{\r\n        Data = url_base + url + '?c=' + apikey.replace (' ','%20');\r\n    }\r\n   console.log(Data);\r\n\r\n    return fetch(Data)\r\n    .then(func.handleErrors)   \r\n    .then(function(response) {      \r\n        return response.json(); // process it inside the `then` when calling the function\r\n             \r\n    }).catch(function (err) {\r\n        return err.message;\r\n    });\r\n   \r\n} \r\n\r\nmodule.exports.getCalendar = getCalendar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}