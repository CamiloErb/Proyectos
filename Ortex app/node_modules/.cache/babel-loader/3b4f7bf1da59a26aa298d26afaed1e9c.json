{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camo\\\\Desktop\\\\ORTEX\\\\ortex-app\\\\src\\\\components\\\\EURUDSrate\\\\EURUSDrate.js\",\n    _s = $RefreshSig$();\n\n//b0qrdvv5sno7b3c:pjdm9hy5gjypuyk\n// fetch(\"https://api.tradingeconomics.com/country/united-states/?client=guest:guest\").then(response=>{\n//     console.log(response)\n// })\nimport React, { useState, useCallback, useMemo, useRef } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebSocketDemo = () => {\n  _s();\n\n  //Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState('ws://stream.tradingeconomics.com/?client=guest:guest');\n  const messageHistory = useRef([]);\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket(socketUrl);\n  messageHistory.current = useMemo(() => messageHistory.current.concat(lastMessage), [lastMessage]);\n  const handleClickChangeSocketUrl = useCallback(() => setSocketUrl('ws://stream.tradingeconomics.com/?client=b0qrdvv5sno7b3c:pjdm9hy5gjypuyk'), []);\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello'), []);\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyState];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickChangeSocketUrl,\n      children: \"Click Me to change Socket Url\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickSendMessage,\n      disabled: readyState !== ReadyState.OPEN,\n      children: \"Click Me to send 'Hello'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"The WebSocket is currently \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), lastMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Last message: \", lastMessage.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messageHistory.current.map((message, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message.data\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WebSocketDemo, \"2QqkLLpDRZMv0rlHB8SlbIofFa8=\", false, function () {\n  return [useWebSocket];\n});\n\n_c = WebSocketDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketDemo\");","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/src/components/EURUDSrate/EURUSDrate.js"],"names":["React","useState","useCallback","useMemo","useRef","useWebSocket","ReadyState","WebSocketDemo","socketUrl","setSocketUrl","messageHistory","sendMessage","lastMessage","readyState","current","concat","handleClickChangeSocketUrl","handleClickSendMessage","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","data","map","message","idx"],"mappings":";;;AACI;AACA;AACA;AACA;AAEJ,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,sDAAD,CAA1C;AACA,QAAMS,cAAc,GAAGN,MAAM,CAAC,EAAD,CAA7B;AAEA,QAAM;AACJO,IAAAA,WADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFR,YAAY,CAACG,SAAD,CAJhB;AAMAE,EAAAA,cAAc,CAACI,OAAf,GAAyBX,OAAO,CAAC,MAC/BO,cAAc,CAACI,OAAf,CAAuBC,MAAvB,CAA8BH,WAA9B,CAD8B,EACa,CAACA,WAAD,CADb,CAAhC;AAGA,QAAMI,0BAA0B,GAAGd,WAAW,CAAC,MAC7CO,YAAY,CAAC,0EAAD,CADgC,EAC8C,EAD9C,CAA9C;AAGA,QAAMQ,sBAAsB,GAAGf,WAAW,CAAC,MACzCS,WAAW,CAAC,OAAD,CAD6B,EAClB,EADkB,CAA1C;AAGA,QAAMO,gBAAgB,GAAG;AACvB,KAACZ,UAAU,CAACa,UAAZ,GAAyB,YADF;AAEvB,KAACb,UAAU,CAACc,IAAZ,GAAmB,MAFI;AAGvB,KAACd,UAAU,CAACe,OAAZ,GAAsB,SAHC;AAIvB,KAACf,UAAU,CAACgB,MAAZ,GAAqB,QAJE;AAKvB,KAAChB,UAAU,CAACiB,cAAZ,GAA6B;AALN,IAMvBV,UANuB,CAAzB;AAQA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAEG,0BADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,OAAO,EAAEC,sBADX;AAEE,MAAA,QAAQ,EAAEJ,UAAU,KAAKP,UAAU,CAACc,IAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAA,gDAAkCF,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGN,WAAW,gBAAG;AAAA,mCAAqBA,WAAW,CAACY,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmD,IAbjE,eAcE;AAAA,gBACGd,cAAc,CAACI,OAAf,CACEW,GADF,CACM,CAACC,OAAD,EAAUC,GAAV,kBAAkB;AAAA,kBAAiBD,OAAO,CAACF;AAAzB,SAAWG,GAAX;AAAA;AAAA;AAAA;AAAA,cADxB;AADH;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDM;;GAAMpB,a;UASPF,Y;;;KATOE,a","sourcesContent":["\r\n    //b0qrdvv5sno7b3c:pjdm9hy5gjypuyk\r\n    // fetch(\"https://api.tradingeconomics.com/country/united-states/?client=guest:guest\").then(response=>{\r\n    //     console.log(response)\r\n    // })\r\n\r\nimport React, { useState, useCallback, useMemo, useRef } from 'react';\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nexport const WebSocketDemo = () => {\r\n  //Public API that will echo messages sent to it back to the client\r\n  const [socketUrl, setSocketUrl] = useState('ws://stream.tradingeconomics.com/?client=guest:guest');\r\n  const messageHistory = useRef([]);\r\n\r\n  const {\r\n    sendMessage,\r\n    lastMessage,\r\n    readyState,\r\n  } = useWebSocket(socketUrl);\r\n\r\n  messageHistory.current = useMemo(() =>\r\n    messageHistory.current.concat(lastMessage),[lastMessage]);\r\n\r\n  const handleClickChangeSocketUrl = useCallback(() =>\r\n    setSocketUrl('ws://stream.tradingeconomics.com/?client=b0qrdvv5sno7b3c:pjdm9hy5gjypuyk'), []);\r\n\r\n  const handleClickSendMessage = useCallback(() =>\r\n    sendMessage('Hello'), []);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Open',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n  }[readyState];\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={handleClickChangeSocketUrl}\r\n      >\r\n        Click Me to change Socket Url\r\n      </button>\r\n      <button\r\n        onClick={handleClickSendMessage}\r\n        disabled={readyState !== ReadyState.OPEN}\r\n      >\r\n        Click Me to send 'Hello'\r\n      </button>\r\n      <span>The WebSocket is currently {connectionStatus}</span>\r\n      {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\r\n      <ul>\r\n        {messageHistory.current\r\n          .map((message, idx) => <span key={idx}>{message.data}</span>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}