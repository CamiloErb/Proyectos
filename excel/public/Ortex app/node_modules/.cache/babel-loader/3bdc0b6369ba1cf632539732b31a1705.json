{"ast":null,"code":"'use strict';\n\nconst auth = require('./auth.js');\n\nconst date = require('./functions.js');\n\nconst func = require('./functions.js');\n\nconst fetch = require('node-fetch'); //setting global variables to be used outside this module\n\n\nglobal.country = null;\nglobal.indicator = null;\nglobal.ticker = null;\nglobal.start_date = null;\nglobal.end_date = null; //This function builds the path to get the API request:\n\n/****************************************************************************************************************************  \r\n  parameters:\r\n    String or list: country, indicator, ticker, start_date, end_date\r\n\r\n  example:\r\n    getHistoricalData(country = ['china', 'portugal'], indicator = 'gdp');\r\n    getHistoricalData(country ='china', indicator = 'gdp', start_date = '2018-02-02');\r\n    getHistoricalData(country =['china', 'portugal'], indicator = 'gdp', start_date = '2018-02-02', end_date = '2019-02-02');         \r\n    getHistoricalData(ticker ='usurtot', start_date = '2018-02-02' );      \r\n\r\n******************************************************************************************************************************/\n\nfunction getHistoricalData() {\n  var url = '';\n  var Data = '';\n\n  if (country != null && indicator != null) {\n    url = '/historical/country/' + country + '/indicator/' + indicator;\n  }\n\n  if (start_date != null) {\n    url = '/historical/country/' + country + '/indicator/' + indicator + '/' + start_date;\n  }\n\n  if (start_date != null && end_date != null) {\n    url = '/historical/country/' + country + '/indicator/' + indicator + '/' + start_date + '/' + end_date;\n  }\n\n  if (ticker != null && start_date != null) {\n    url = '/historical/ticker/' + ticker + '/' + start_date;\n  }\n\n  date.checkDates(start_date, end_date);\n  Data = url_base + url + '?c=' + apikey.replace(' ', '%20');\n  return fetch(Data).then(func.handleErrors).then(function (response) {\n    return response.json(); // process it inside the `then` when calling the function       \n  }).catch(function (err) {\n    return err.message;\n  });\n}\n\nmodule.exports.getHistoricalData = getHistoricalData;","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/node_modules/tradingeconomics/historical.js"],"names":["auth","require","date","func","fetch","global","country","indicator","ticker","start_date","end_date","getHistoricalData","url","Data","checkDates","url_base","apikey","replace","then","handleErrors","response","json","catch","err","message","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,YAAD,CAArB,C,CAEA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,SAAP,GAAmB,IAAnB;AACAF,MAAM,CAACG,MAAP,GAAgB,IAAhB;AACAH,MAAM,CAACI,UAAP,GAAoB,IAApB;AACAJ,MAAM,CAACK,QAAP,GAAkB,IAAlB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,iBAAT,GAA4B;AAExB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIP,OAAO,IAAI,IAAX,IAAmBC,SAAS,IAAI,IAApC,EAAyC;AACrCK,IAAAA,GAAG,GAAG,yBAAyBN,OAAzB,GAAmC,aAAnC,GAAmDC,SAAzD;AACH;;AACD,MAAIE,UAAU,IAAI,IAAlB,EAAuB;AACnBG,IAAAA,GAAG,GAAI,yBAAyBN,OAAzB,GAAmC,aAAnC,GAAmDC,SAAnD,GAA+D,GAA/D,GAAqEE,UAA5E;AACH;;AACD,MAAIA,UAAU,IAAI,IAAd,IAAsBC,QAAQ,IAAI,IAAtC,EAA2C;AACvCE,IAAAA,GAAG,GAAI,yBAAyBN,OAAzB,GAAmC,aAAnC,GAAmDC,SAAnD,GAA+D,GAA/D,GAAqEE,UAArE,GAAkF,GAAlF,GAAwFC,QAA/F;AACH;;AACD,MAAIF,MAAM,IAAI,IAAV,IAAkBC,UAAU,IAAI,IAApC,EAAyC;AACrCG,IAAAA,GAAG,GAAG,wBAAwBJ,MAAxB,GAAiC,GAAjC,GAAuCC,UAA7C;AACH;;AAEDP,EAAAA,IAAI,CAACY,UAAL,CAAgBL,UAAhB,EAA4BC,QAA5B;AACAG,EAAAA,IAAI,GAAGE,QAAQ,GAAGH,GAAX,GAAiB,KAAjB,GAAyBI,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAAhC;AAEA,SAAOb,KAAK,CAACS,IAAD,CAAL,CACNK,IADM,CACDf,IAAI,CAACgB,YADJ,EAEND,IAFM,CAED,UAASE,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAC3B,GAJM,EAIJC,KAJI,CAIE,UAAUC,GAAV,EAAe;AACpB,WAAOA,GAAG,CAACC,OAAX;AACH,GANM,CAAP;AASH;;AAEDC,MAAM,CAACC,OAAP,CAAef,iBAAf,GAAmCA,iBAAnC","sourcesContent":["'use strict'\r\n\r\nconst auth = require('./auth.js');\r\nconst date = require('./functions.js');\r\nconst func = require('./functions.js');\r\nconst fetch = require('node-fetch');\r\n\r\n//setting global variables to be used outside this module\r\nglobal.country = null;\r\nglobal.indicator = null;\r\nglobal.ticker = null;\r\nglobal.start_date = null;\r\nglobal.end_date = null;\r\n\r\n//This function builds the path to get the API request:\r\n/****************************************************************************************************************************  \r\n  parameters:\r\n    String or list: country, indicator, ticker, start_date, end_date\r\n\r\n  example:\r\n    getHistoricalData(country = ['china', 'portugal'], indicator = 'gdp');\r\n    getHistoricalData(country ='china', indicator = 'gdp', start_date = '2018-02-02');\r\n    getHistoricalData(country =['china', 'portugal'], indicator = 'gdp', start_date = '2018-02-02', end_date = '2019-02-02');         \r\n    getHistoricalData(ticker ='usurtot', start_date = '2018-02-02' );      \r\n\r\n******************************************************************************************************************************/\r\n\r\nfunction getHistoricalData(){\r\n\r\n    var url = '';\r\n    var Data = '';\r\n\r\n    if (country != null && indicator != null){    \r\n        url = '/historical/country/' + country + '/indicator/' + indicator;    \r\n    }\r\n    if (start_date != null){    \r\n        url =  '/historical/country/' + country + '/indicator/' + indicator + '/' + start_date;    \r\n    }\r\n    if (start_date != null && end_date != null){                   \r\n        url =  '/historical/country/' + country + '/indicator/' + indicator + '/' + start_date + '/' + end_date;        \r\n    }\r\n    if (ticker != null && start_date != null){              \r\n        url = '/historical/ticker/' + ticker + '/' + start_date;    \r\n    } \r\n    \r\n    date.checkDates(start_date, end_date); \r\n    Data = url_base + url + '?c=' + apikey.replace (' ','%20');\r\n    \r\n    return fetch(Data)\r\n    .then(func.handleErrors)   \r\n    .then(function(response) {    \r\n        return response.json(); // process it inside the `then` when calling the function       \r\n    }).catch(function (err) {\r\n        return err.message;\r\n    });\r\n   \r\n\r\n}\r\n\r\nmodule.exports.getHistoricalData = getHistoricalData;\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}