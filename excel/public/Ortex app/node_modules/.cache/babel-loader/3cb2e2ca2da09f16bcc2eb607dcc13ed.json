{"ast":null,"code":"'use strict';\n\nconst auth = require('./auth.js');\n\nconst date = require('./functions.js');\n\nconst func = require('./functions.js');\n\nconst fetch = require('node-fetch'); //setting global variables to be used outside this module\n\n\nglobal.symbol = null;\nglobal.country = null;\nglobal.type = null;\nglobal.start_date = null;\nglobal.end_date = null; //This function builds the path to get the API request:\n\n/******************************************************************************************* \r\n  parameters:\r\n    String or list: symbol, country \r\n    String: type, start_date, end_date\r\n        -> type can be:\r\n           earnings, ipo, dividends\r\n\r\n  example:\r\n    getEarnings();\r\n    getEarnings(start_date = '2018-02-02');\r\n    getEarnings(country = 'united states');\r\n    getEarnings(type = 'ipo');\r\n    getEarnings(symbol ='CMCSA:US', start_date = '2018-02-02');\r\n    getEarnings(symbol ='FARM:US', start_date = '2018-02-01', end_date = '2018-03-01');         \r\n         \r\n*********************************************************************************************/\n\nfunction getEarnings() {\n  var Data = '';\n  var url = '';\n\n  if (start_date != null) {\n    url = '/earnings' + '?d1=' + start_date;\n  }\n\n  if (symbol != null) {\n    url = '/earnings/symbol/' + symbol + '?d1=' + start_date;\n  }\n\n  if (country != null) {\n    url = '/earnings/country/' + country;\n  }\n\n  if (start_date != null && end_date != null) {\n    url = '/earnings/symbol/' + symbol + '?d1=' + start_date + '&d2=' + end_date;\n  }\n\n  if (country === null && symbol === null && start_date === null && end_date === null) {\n    url = '/earnings';\n  }\n\n  if (type != null) {\n    url = '/earnings' + '?type=' + type;\n  }\n\n  date.checkDates(start_date, end_date);\n\n  if (url.includes('?')) {\n    Data = url_base + url + '&c=' + apikey.replace(' ', '%20');\n  } else {\n    Data = url_base + url + '?c=' + apikey.replace(' ', '%20');\n  }\n\n  return fetch(Data).then(func.handleErrors).then(function (response) {\n    return response.json(); // process it inside the `then` when calling the function       \n  }).catch(function (err) {\n    return err.message;\n  });\n}\n\nmodule.exports.getEarnings = getEarnings;","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/node_modules/tradingeconomics/earnings.js"],"names":["auth","require","date","func","fetch","global","symbol","country","type","start_date","end_date","getEarnings","Data","url","checkDates","includes","url_base","apikey","replace","then","handleErrors","response","json","catch","err","message","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,YAAD,CAArB,C,CAEA;;;AACAI,MAAM,CAACC,MAAP,GAAgB,IAAhB;AACAD,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,MAAM,CAACG,IAAP,GAAc,IAAd;AACAH,MAAM,CAACI,UAAP,GAAoB,IAApB;AACAJ,MAAM,CAACK,QAAP,GAAkB,IAAlB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAsB;AAElB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,MAAIJ,UAAU,IAAI,IAAlB,EAAuB;AACnBI,IAAAA,GAAG,GAAI,cAAc,MAAd,GAAuBJ,UAA9B;AACH;;AACD,MAAIH,MAAM,IAAI,IAAd,EAAmB;AACfO,IAAAA,GAAG,GAAI,sBAAsBP,MAAtB,GAA+B,MAA/B,GAAwCG,UAA/C;AACH;;AACD,MAAGF,OAAO,IAAI,IAAd,EAAmB;AACfM,IAAAA,GAAG,GAAG,uBAAuBN,OAA7B;AACH;;AACD,MAAIE,UAAU,IAAI,IAAd,IAAsBC,QAAQ,IAAI,IAAtC,EAA2C;AACvCG,IAAAA,GAAG,GAAI,sBAAsBP,MAAtB,GAA+B,MAA/B,GAAwCG,UAAxC,GAAqD,MAArD,GAA8DC,QAArE;AACH;;AACD,MAAGH,OAAO,KAAK,IAAZ,IAAoBD,MAAM,KAAK,IAA/B,IAAuCG,UAAU,KAAK,IAAtD,IAA8DC,QAAQ,KAAK,IAA9E,EAAmF;AAC/EG,IAAAA,GAAG,GAAI,WAAP;AACH;;AACD,MAAGL,IAAI,IAAI,IAAX,EAAgB;AACZK,IAAAA,GAAG,GAAG,cAAc,QAAd,GAAyBL,IAA/B;AACH;;AAEDN,EAAAA,IAAI,CAACY,UAAL,CAAgBL,UAAhB,EAA4BC,QAA5B;;AAEA,MAAGG,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAH,EAAqB;AACjBH,IAAAA,IAAI,GAAGI,QAAQ,GAAGH,GAAX,GAAiB,KAAjB,GAAwBI,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAA/B;AACH,GAFD,MAEK;AACDN,IAAAA,IAAI,GAAGI,QAAQ,GAAGH,GAAX,GAAiB,KAAjB,GAAwBI,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAA/B;AACH;;AACD,SAAOd,KAAK,CAACQ,IAAD,CAAL,CACNO,IADM,CACDhB,IAAI,CAACiB,YADJ,EAEND,IAFM,CAED,UAASE,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAC3B,GAJM,EAIJC,KAJI,CAIE,UAAUC,GAAV,EAAe;AACpB,WAAOA,GAAG,CAACC,OAAX;AACH,GANM,CAAP;AAQH;;AAEDC,MAAM,CAACC,OAAP,CAAehB,WAAf,GAA6BA,WAA7B","sourcesContent":["'use strict'\r\n\r\nconst auth = require('./auth.js');\r\nconst date = require('./functions.js');\r\nconst func = require('./functions.js');\r\nconst fetch = require('node-fetch');\r\n\r\n//setting global variables to be used outside this module\r\nglobal.symbol = null;\r\nglobal.country = null;\r\nglobal.type = null;\r\nglobal.start_date = null;\r\nglobal.end_date = null;\r\n\r\n//This function builds the path to get the API request:\r\n/******************************************************************************************* \r\n  parameters:\r\n    String or list: symbol, country \r\n    String: type, start_date, end_date\r\n        -> type can be:\r\n           earnings, ipo, dividends\r\n\r\n  example:\r\n    getEarnings();\r\n    getEarnings(start_date = '2018-02-02');\r\n    getEarnings(country = 'united states');\r\n    getEarnings(type = 'ipo');\r\n    getEarnings(symbol ='CMCSA:US', start_date = '2018-02-02');\r\n    getEarnings(symbol ='FARM:US', start_date = '2018-02-01', end_date = '2018-03-01');         \r\n         \r\n*********************************************************************************************/\r\n\r\nfunction getEarnings(){\r\n\r\n    var Data = '';\r\n    var url = '';\r\n      \r\n    if (start_date != null){    \r\n        url =  '/earnings' + '?d1=' + start_date;   \r\n    }\r\n    if (symbol != null){                   \r\n        url =  '/earnings/symbol/' + symbol + '?d1=' + start_date;      \r\n    }\r\n    if(country != null){\r\n        url = '/earnings/country/' + country;\r\n    }\r\n    if (start_date != null && end_date != null){                 \r\n        url =  '/earnings/symbol/' + symbol + '?d1=' + start_date + '&d2=' + end_date;      \r\n    }\r\n    if(country === null && symbol === null && start_date === null && end_date === null){\r\n        url =  '/earnings';\r\n    }\r\n    if(type != null){\r\n        url = '/earnings' + '?type=' + type;\r\n    }\r\n   \r\n    date.checkDates(start_date, end_date); \r\n   \r\n    if(url.includes('?')){\r\n        Data = url_base + url + '&c='+ apikey.replace (' ','%20');\r\n    }else{\r\n        Data = url_base + url + '?c='+ apikey.replace (' ','%20');\r\n    }\r\n    return fetch(Data)\r\n    .then(func.handleErrors)   \r\n    .then(function(response) {    \r\n        return response.json(); // process it inside the `then` when calling the function       \r\n    }).catch(function (err) {\r\n        return err.message;\r\n    });\r\n   \r\n}\r\n\r\nmodule.exports.getEarnings = getEarnings;\r\n\r\n"]},"metadata":{},"sourceType":"script"}