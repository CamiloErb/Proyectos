{"ast":null,"code":"'use strict';\n\nconst auth = require('./auth.js');\n\nconst func = require('./functions.js');\n\nconst fetch = require('node-fetch');\n\nconst date = require('./functions.js'); //setting global variables to be used outside this module\n\n\nglobal.country = null;\nglobal.historical = null;\nglobal.start_date = null;\nglobal.end_date = null; //This function builds the path to get the API request:\n\n/****************************************************************************************************************************  \r\n  WITHOUT PARAMETERS A LIST OF ALL CREDIT RATINGS WILL BE PROVIDED\r\n  parameters:\r\n    String or list: country, historical(in this case we will put the country of who we want historical data from)\r\n\r\n  example:\r\n    getRatings();\r\n    getRatings(country ='china');\r\n    getRatings(country =['china', 'japan']);\r\n    getRatings(historical ='united states');             \r\n    \r\n******************************************************************************************************************************/\n\nfunction getRatings() {\n  var url = '';\n  var Data = '';\n\n  if (country != null) {\n    url = '/ratings/' + country;\n  }\n\n  if (historical != null) {\n    url = '/ratings/historical/' + historical;\n  }\n\n  if (historical != null && start_date != null) {\n    url = '/ratings/historical/' + historical + '/' + start_date;\n  }\n\n  if (historical != null && start_date != null && end_date != null) {\n    url = '/ratings/historical/' + historical + '/' + start_date + '/' + end_date;\n  }\n\n  if (historical === null && country === null) {\n    url = '/ratings';\n  }\n\n  date.checkDates(start_date);\n  Data = url_base + url + '?c=' + apikey.replace(' ', '%20');\n  return fetch(Data).then(func.handleErrors).then(function (response) {\n    return response.json(); // process it inside the `then` when calling the function       \n  }).catch(function (err) {\n    return err.message;\n  });\n}\n\nmodule.exports.getRatings = getRatings;","map":{"version":3,"sources":["C:/Users/Camo/Desktop/ORTEX/ortex-app/node_modules/tradingeconomics/ratings.js"],"names":["auth","require","func","fetch","date","global","country","historical","start_date","end_date","getRatings","url","Data","checkDates","url_base","apikey","replace","then","handleErrors","response","json","catch","err","message","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAD,CAArB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAApB,C,CAEA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,UAAP,GAAoB,IAApB;AACAF,MAAM,CAACG,UAAP,GAAoB,IAApB;AACAH,MAAM,CAACI,QAAP,GAAkB,IAAlB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,GAAqB;AAEnB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIN,OAAO,IAAI,IAAf,EAAoB;AAClBK,IAAAA,GAAG,GAAG,cAAcL,OAApB;AACD;;AACD,MAAIC,UAAU,IAAI,IAAlB,EAAuB;AACrBI,IAAAA,GAAG,GAAG,yBAAyBJ,UAA/B;AACD;;AACD,MAAIA,UAAU,IAAI,IAAd,IAAsBC,UAAU,IAAI,IAAxC,EAA6C;AAC3CG,IAAAA,GAAG,GAAG,yBAAyBJ,UAAzB,GAAsC,GAAtC,GAA4CC,UAAlD;AACD;;AACD,MAAID,UAAU,IAAI,IAAd,IAAsBC,UAAU,IAAI,IAApC,IAA4CC,QAAQ,IAAI,IAA5D,EAAiE;AAC/DE,IAAAA,GAAG,GAAG,yBAAyBJ,UAAzB,GAAsC,GAAtC,GAA4CC,UAA5C,GAAyD,GAAzD,GAA+DC,QAArE;AACD;;AACD,MAAIF,UAAU,KAAK,IAAf,IAAuBD,OAAO,KAAK,IAAvC,EAA4C;AAC1CK,IAAAA,GAAG,GAAG,UAAN;AACD;;AAEDP,EAAAA,IAAI,CAACS,UAAL,CAAgBL,UAAhB;AACAI,EAAAA,IAAI,GAAGE,QAAQ,GAAGH,GAAX,GAAiB,KAAjB,GAAyBI,MAAM,CAACC,OAAP,CAAgB,GAAhB,EAAoB,KAApB,CAAhC;AAEA,SAAOb,KAAK,CAACS,IAAD,CAAL,CACNK,IADM,CACDf,IAAI,CAACgB,YADJ,EAEND,IAFM,CAED,UAASE,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAC3B,GAJM,EAIJC,KAJI,CAIE,UAAUC,GAAV,EAAe;AACpB,WAAOA,GAAG,CAACC,OAAX;AACH,GANM,CAAP;AASD;;AAEDC,MAAM,CAACC,OAAP,CAAef,UAAf,GAA4BA,UAA5B","sourcesContent":["'use strict'\r\n\r\nconst auth = require('./auth.js');\r\nconst func = require('./functions.js');\r\nconst fetch = require('node-fetch');\r\nconst date = require('./functions.js');\r\n\r\n//setting global variables to be used outside this module\r\nglobal.country = null;\r\nglobal.historical = null;\r\nglobal.start_date = null;\r\nglobal.end_date = null;\r\n\r\n//This function builds the path to get the API request:\r\n/****************************************************************************************************************************  \r\n  WITHOUT PARAMETERS A LIST OF ALL CREDIT RATINGS WILL BE PROVIDED\r\n  parameters:\r\n    String or list: country, historical(in this case we will put the country of who we want historical data from)\r\n\r\n  example:\r\n    getRatings();\r\n    getRatings(country ='china');\r\n    getRatings(country =['china', 'japan']);\r\n    getRatings(historical ='united states');             \r\n    \r\n******************************************************************************************************************************/\r\nfunction getRatings(){\r\n\r\n  var url = '';\r\n  var Data = '';\r\n   \r\n  if (country != null){    \r\n    url = '/ratings/' + country;    \r\n  }\r\n  if (historical != null){    \r\n    url = '/ratings/historical/' + historical;    \r\n  }\r\n  if (historical != null && start_date != null){   \r\n    url = '/ratings/historical/' + historical + '/' + start_date;\r\n  }\r\n  if (historical != null && start_date != null && end_date != null){   \r\n    url = '/ratings/historical/' + historical + '/' + start_date + '/' + end_date;    \r\n  }\r\n  if (historical === null && country === null){\r\n    url = '/ratings';\r\n  }\r\n  \r\n  date.checkDates(start_date); \r\n  Data = url_base + url + '?c=' + apikey.replace (' ','%20');\r\n  \r\n  return fetch(Data)\r\n  .then(func.handleErrors)   \r\n  .then(function(response) {    \r\n      return response.json(); // process it inside the `then` when calling the function       \r\n  }).catch(function (err) {\r\n      return err.message;\r\n  });\r\n \r\n\r\n}\r\n\r\nmodule.exports.getRatings = getRatings;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}